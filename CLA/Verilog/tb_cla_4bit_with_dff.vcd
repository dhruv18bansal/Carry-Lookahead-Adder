$date
	Sun Nov 17 16:00:36 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_cla_4bit_with_dff $end
$var wire 4 ! S [3:0] $end
$var wire 1 " Cout $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % Cin $end
$var reg 1 & clk $end
$scope module dut $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 1 % Cin $end
$var wire 1 & clk $end
$var wire 4 ) S_reg [3:0] $end
$var wire 4 * S [3:0] $end
$var wire 1 + Cout_reg $end
$var wire 1 " Cout $end
$var wire 1 , Cin_reg $end
$var wire 4 - B_reg [3:0] $end
$var wire 4 . A_reg [3:0] $end
$scope module cla_inst $end
$var wire 4 / A [3:0] $end
$var wire 4 0 B [3:0] $end
$var wire 4 1 G [3:0] $end
$var wire 4 2 P [3:0] $end
$var wire 4 3 S [3:0] $end
$var wire 1 + Cout $end
$var wire 1 , Cin $end
$var wire 5 4 C [4:0] $end
$upscope $end
$scope module dff_A0 $end
$var wire 1 5 D $end
$var wire 1 & clk $end
$var reg 1 6 Q $end
$upscope $end
$scope module dff_A1 $end
$var wire 1 7 D $end
$var wire 1 & clk $end
$var reg 1 8 Q $end
$upscope $end
$scope module dff_A2 $end
$var wire 1 9 D $end
$var wire 1 & clk $end
$var reg 1 : Q $end
$upscope $end
$scope module dff_A3 $end
$var wire 1 ; D $end
$var wire 1 & clk $end
$var reg 1 < Q $end
$upscope $end
$scope module dff_B0 $end
$var wire 1 = D $end
$var wire 1 & clk $end
$var reg 1 > Q $end
$upscope $end
$scope module dff_B1 $end
$var wire 1 ? D $end
$var wire 1 & clk $end
$var reg 1 @ Q $end
$upscope $end
$scope module dff_B2 $end
$var wire 1 A D $end
$var wire 1 & clk $end
$var reg 1 B Q $end
$upscope $end
$scope module dff_B3 $end
$var wire 1 C D $end
$var wire 1 & clk $end
$var reg 1 D Q $end
$upscope $end
$scope module dff_Cin $end
$var wire 1 % D $end
$var wire 1 & clk $end
$var reg 1 , Q $end
$upscope $end
$scope module dff_Cout $end
$var wire 1 + D $end
$var wire 1 & clk $end
$var reg 1 " Q $end
$upscope $end
$scope module dff_S0 $end
$var wire 1 E D $end
$var wire 1 & clk $end
$var reg 1 F Q $end
$upscope $end
$scope module dff_S1 $end
$var wire 1 G D $end
$var wire 1 & clk $end
$var reg 1 H Q $end
$upscope $end
$scope module dff_S2 $end
$var wire 1 I D $end
$var wire 1 & clk $end
$var reg 1 J Q $end
$upscope $end
$scope module dff_S3 $end
$var wire 1 K D $end
$var wire 1 & clk $end
$var reg 1 L Q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
xL
xK
xJ
xI
xH
xG
xF
xE
xD
1C
xB
0A
x@
1?
x>
0=
x<
0;
x:
19
x8
07
x6
15
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
x,
x+
bx *
bx )
b1010 (
b101 '
0&
0%
b1010 $
b101 #
x"
bx !
$end
#5
1K
1I
0+
1G
1E
b1111 )
b1111 3
b0 1
b1111 2
16
08
1:
b101 .
b101 /
0<
0>
1@
0B
b1010 -
b1010 0
1D
b0 4
0,
1&
#10
1=
0?
1A
09
1;
0&
b1101 $
b1101 (
b1001 #
b1001 '
#15
1+
0K
1G
0E
b10010 4
b110 )
b110 3
b1001 1
b100 2
0"
1L
1J
1H
b1111 !
b1111 *
1F
1B
0@
b1101 -
b1101 0
1>
1<
b1001 .
b1001 /
0:
1&
#20
0&
#25
0F
b110 !
b110 *
0L
1"
1&
#30
0&
